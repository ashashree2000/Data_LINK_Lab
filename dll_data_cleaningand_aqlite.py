# -*- coding: utf-8 -*-
"""DataLinkLab_Assesment_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gNcFXNi3vJEfQo2pQS__slL1pP3hIy9O
"""

import sqlite3
import pandas as pd

df = pd.read_excel('dll_records.xls')
df.head()

df.drop_duplicates()

# Step 2.b
# Executing Step 2.b before Step 2.a because DmdCd values will be dropped with HOA containing total
# splitting will not be possible afterwards
df['DmdCd'].fillna(method='ffill', inplace=True)
df

df['HOA'].str.contains("Total") == True

# Step 2.a
#df_cleaned = df[ (df['HOA'] == 'Total') | (df['DmdCd'] == 'Grand Total') ].index
df_cleaned = df[(df['HOA'].str.contains('Total')) |
                (df['DmdCd'].str.contains('Total'))].index

df.drop(df_cleaned, inplace=True)

df

# arranging the indexes
df.reset_index(inplace=True, drop=True)
df

# Step a completed
df['HOA'].str.contains("Total") == True

# step 2.c
df[['DemandCode', 'Demand']] = df['DmdCd'].str.split('-', 1, expand=True)
df = df[['DemandCode', 'Demand'] +
        [col for col in df.columns if col not in ['DemandCode', 'Demand']]]
df

# Deleting the column DmdCd , since its unnecessary now
del df['DmdCd']
df

# step 2.d
# Step 4: Split column HOA at “-” and expand the result to additional columns. These should be named as:
# MajorHead
# SubMajorHead
# MinorHead
# SubMinorHead
# DetailHead
# SubDetailHead
# BudgetHead
# PlanNonPlan
# VotedCharged
# StatementofExpenditure

df[['MajorHead', 'SubMajorHead', 'MinorHead', 'SubMinorHead', 'DetailHead',
    'SubDetailHead', 'BudgetHead', 'PlanNonPlan', 'VotedCharged', 'StatementofExpenditure']] = df['HOA'].str.split('-', 9, expand=True)
df

# Deleting the column HOA , since its unnecessary now
del df['HOA']
df

conn = sqlite3.connect('mydatabase.db')

df.to_sql('mytable', conn, if_exists='replace', index=False)

conn.close()


conn = sqlite3.connect('mydatabase.db')
cursor = conn.cursor()

cursor.execute('SELECT * FROM mytable')

result = cursor.fetchall()

for row in result:
    print(row)

conn.close()
